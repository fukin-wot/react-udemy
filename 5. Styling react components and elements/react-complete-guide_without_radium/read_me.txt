instead of using radium and styleroot, we use css modules
for that, we eject the react configuration by typing
npm run eject
then we'll se many new folders and files.

in config/webpack.config.dev.js and .prod.js,

in .dev.js->
in module: , find test: css

modules: true,
localIdentName: '[name]__[local]__[hash:base64:5]'

in .prod.js->
find module:, test: css, use:, options:
there, add
modules: true,
localIdentName: '[name]__[local]__[hash:base64:5]'

$%#$%#$%#$%#%#$#$%#$%##%$#$%#$%#$%#$%#$%#$%$%#%$#%$#%#%$#%$#%#%#%$#%$#$%#$%#$%#$%#

the css-loader transforms the css classname in the css file, into a unique one.
using this localidentity name pattern we setup
it takes the classname we defined,filename of the jsfile that imports the class and some random hash to generate a unique css class name 
then it stores these unique class names it generated in the js object you import and stores them in properties where the prop name are your original css class names
so the value of these props are the unique classnames generated by css-loader